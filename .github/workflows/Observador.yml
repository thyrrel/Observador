name: Observador

on:
  push:
    branches: [ "main" ]
    tags:
      - 'v*'
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout do repositório
        uses: actions/checkout@v4

      - name: Configurar Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.35.1" # Dart >=3.4.0
          channel: stable

      - name: Limpar build anterior
        run: flutter clean

      - name: Instalar dependências
        run: flutter pub get

      - name: Atualizar plugins (force upgrade)
        run: |
          flutter pub outdated
          flutter pub upgrade

      - name: Obter versão do build
        id: version
        run: |
          if [ "${GITHUB_EVENT_NAME}" = "pull_request" ]; then
            BUILD_TYPE="pr"
            BUILD_VERSION="pr"
          else
            if [[ "${GITHUB_REF##*/}" == v* ]]; then
              BUILD_TYPE="release"
              BUILD_VERSION="${GITHUB_REF##*/}"
            else
              BUILD_TYPE="beta"
              BUILD_VERSION="beta"
            fi
          fi
          echo "BUILD_VERSION=$BUILD_VERSION" >> $GITHUB_ENV
          echo "BUILD_TYPE=$BUILD_TYPE" >> $GITHUB_ENV

          # Cálculo seguro do versionCode
          if [[ "$BUILD_TYPE" == "pr" ]]; then
            VERSION_CODE=10000  # PR sempre entre 10000-19999
          elif [[ "$BUILD_TYPE" == "beta" ]]; then
            VERSION_CODE=20000  # Beta sempre entre 20000-29999
          else
            # Release baseado na versão MAJOR.MINOR.PATCH
            CLEAN_VERSION=$(echo $BUILD_VERSION | sed 's/^v//' | sed 's/[^0-9\.]//g')
            IFS='.' read -r MAJOR MINOR PATCH <<< "$CLEAN_VERSION"
            MAJOR=${MAJOR:-0}
            MINOR=${MINOR:-0}
            PATCH=${PATCH:-0}
            VERSION_CODE=$((MAJOR * 10000 + MINOR * 100 + PATCH)) # seguro < 2.1B
          fi

          echo "VERSION_CODE=$VERSION_CODE" >> $GITHUB_ENV
          echo "Versão do build: $BUILD_VERSION, versionCode: $VERSION_CODE, tipo: $BUILD_TYPE"

      - name: Atualizar versionCode no build.gradle
        run: |
          sed -i "s/versionCode [0-9]\+/versionCode $VERSION_CODE/" android/app/build.gradle
          sed -i "s/versionName \".*\"/versionName \"$BUILD_VERSION\"/" android/app/build.gradle
          echo "Versão atualizada no build.gradle:"
          grep "version" android/app/build.gradle

      - name: Build APK (release)
        run: flutter build apk --release --build-name=$BUILD_VERSION --build-number=$VERSION_CODE

      - name: Build AAB (release)
        run: flutter build appbundle --release --build-name=$BUILD_VERSION --build-number=$VERSION_CODE

      - name: Upload de APK e AAB (sem compressão)
        uses: actions/upload-artifact@v4
        with:
          name: observador-$BUILD_TYPE-$BUILD_VERSION
          path: |
            build/app/outputs/flutter-apk/app-release.apk
            build/app/outputs/bundle/release/app-release.aab
          compression-level: 0
          if-no-files-found: error
