name: Observador

on:
  push:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Java 17
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'
    
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.22.0'
        channel: 'stable'
        cache: true
    
    - name: Verify Flutter installation
      run: |
        flutter --version
        flutter doctor -v
    
    - name: Backup project files
      run: |
        echo "=== Backing up important files ==="
        mkdir -p /tmp/backup
        
        # Backup Dart code
        if [ -d "lib" ]; then
          cp -r lib /tmp/backup/
          echo "✓ Backed up lib directory"
        else
          echo "⚠ No lib directory found"
        fi
        
        # Backup assets
        if [ -d "assets" ]; then
          cp -r assets /tmp/backup/
          echo "✓ Backed up assets directory"
        else
          echo "⚠ No assets directory found"
        fi
        
        # Backup pubspec.yaml
        if [ -f "pubspec.yaml" ]; then
          cp pubspec.yaml /tmp/backup/
          echo "✓ Backed up pubspec.yaml"
        else
          echo "⚠ No pubspec.yaml found"
        fi
        
        # Show what we backed up
        echo "=== Backup contents ==="
        ls -la /tmp/backup/
    
    - name: Create fresh Flutter project
      run: |
        echo "=== Creating new Flutter project ==="
        cd /tmp
        flutter create \
          --project-name observador \
          --org com.example \
          --android-language kotlin \
          --ios-language swift \
          fresh_project
        
        echo "✓ Fresh project created"
        ls -la fresh_project/
    
    - name: Restore project files to fresh project
      run: |
        echo "=== Restoring files to fresh project ==="
        cd /tmp/fresh_project
        
        # Remove default lib directory and restore ours
        if [ -d "/tmp/backup/lib" ]; then
          rm -rf lib
          cp -r /tmp/backup/lib .
          echo "✓ Restored lib directory"
        fi
        
        # Restore pubspec.yaml
        if [ -f "/tmp/backup/pubspec.yaml" ]; then
          cp /tmp/backup/pubspec.yaml .
          echo "✓ Restored pubspec.yaml"
        fi
        
        # Restore assets
        if [ -d "/tmp/backup/assets" ]; then
          cp -r /tmp/backup/assets .
          echo "✓ Restored assets directory"
        fi
        
        echo "=== Final project structure ==="
        ls -la
    
    - name: Get Flutter dependencies
      run: |
        cd /tmp/fresh_project
        echo "=== Getting Flutter dependencies ==="
        flutter pub get
        
        echo "=== Verifying dependencies ==="
        flutter pub deps
    
    - name: Analyze code
      run: |
        cd /tmp/fresh_project
        echo "=== Running Flutter analyze ==="
        flutter analyze --no-fatal-infos || echo "Analysis completed with warnings"
    
    - name: Clean and build APK
      run: |
        cd /tmp/fresh_project
        echo "=== Cleaning project ==="
        flutter clean
        
        echo "=== Getting dependencies again ==="
        flutter pub get
        
        echo "=== Building APK ==="
        flutter build apk --release --verbose
        
        echo "=== Build completed ==="
        ls -la build/app/outputs/flutter-apk/
    
    - name: Upload APK
      uses: actions/upload-artifact@v4
      with:
        name: observador-apk-final
        path: /tmp/fresh_project/build/app/outputs/flutter-apk/app-release.apk
        retention-days: 30
    
    - name: Show APK info
      run: |
        APK_PATH="/tmp/fresh_project/build/app/outputs/flutter-apk/app-release.apk"
        if [ -f "$APK_PATH" ]; then
          echo "=== APK Successfully Built ==="
          ls -lh "$APK_PATH"
          echo "✓ APK is ready for download from the Actions artifacts!"
        else
          echo "❌ APK not found"
          exit 1
        fi
