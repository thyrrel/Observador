name: Observador

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Cache Flutter dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.pub-cache
            .dart_tool
          key: ${{ runner.os }}-flutter-${{ hashFiles('**/pubspec.yaml') }}
          restore-keys: |
            ${{ runner.os }}-flutter-

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.24.0"

      - name: Install dependencies
        run: flutter pub get

      - name: Run Inicializador
        id: iniciador
        run: |
          set -e
          echo "==== Rodando Iniciador ===="
          flutter run ./iniciador.dart --release

      - name: Run Initializer
        if: ${{ steps.iniciador.outcome == 'success' }}
        id: initializer
        run: |
          set -e
          echo "==== Rodando Initializer para validar placeholders e servi√ßos ===="
          flutter run lib/service/initializer.dart --release

      - name: Analyze code
        if: ${{ steps.initializer.outcome == 'success' }}
        run: flutter analyze

      - name: Run tests
        if: ${{ steps.initializer.outcome == 'success' }}
        run: flutter test --coverage

      - name: Build APK (release)
        if: ${{ steps.initializer.outcome == 'success' }}
        run: flutter build apk --release

      - name: Build AppBundle (release)
        if: ${{ steps.initializer.outcome == 'success' }}
        run: flutter build appbundle --release

      - name: Upload build artifacts
        if: ${{ steps.initializer.outcome == 'success' }}
        uses: actions/upload-artifact@v4
        with:
          name: build-outputs
          path: |
            build/app/outputs/flutter-apk/app-release.apk
            build/app/outputs/bundle/release/app-release.aab
