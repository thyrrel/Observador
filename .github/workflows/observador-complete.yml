# ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
# ┃ 🚀 Workflow Principal - Observador          ┃
# ┃ 📱 Orquestração completa de builds          ┃
# ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛

name: "🚀 Observador - Build Completo"

on:
  push:
    branches: [main]
    paths: ['lib/**', 'pubspec.yaml', 'android/**', 'ios/**']
  pull_request:
    branches: [main]
  schedule:
    # Executa diariamente às 6h UTC - ajuste conforme renovação dos créditos
    - cron: '0 6 * * *'
  workflow_dispatch:
    inputs:
      version:
        description: 'Versão do app (ex: 1.2.3)'
        required: false
        default: '1.0.0'
        type: string
      build_android_test:
        description: '🧪 Build Android Test'
        required: false
        default: true
        type: boolean
      build_android_apk:
        description: '📱 Build Android APK'
        required: false
        default: true
        type: boolean
      build_android_aab:
        description: '📦 Build Android AAB'
        required: false
        default: true
        type: boolean
      build_ios:
        description: '🍎 Build iOS'
        required: false
        default: false
        type: boolean
      build_desktop:
        description: '🖥️ Build Desktop'
        required: false
        default: false
        type: boolean

env:
  FLUTTER_VERSION: '3.24.5'
  JAVA_VERSION: '17'

jobs:
  # ╭──────────────────────────────────────────────╮
  # │ 🔧 Setup e Validação                        │
  # ╰──────────────────────────────────────────────╯
  setup:
    name: "🔧 Setup e Validação"
    runs-on: ubuntu-latest
    
    outputs:
      version: ${{ steps.version.outputs.version }}
      build-number: ${{ steps.version.outputs.build-number }}
      should-build: ${{ steps.changes.outputs.should-build }}
      
    steps:
      - name: "📥 Checkout código"
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: "🛠️ Instalar Flutter"
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          cache: true

      - name: "📦 Instalar dependências"
        run: flutter pub get

      - name: "🔍 Análise de código"
        run: flutter analyze --fatal-infos

      - name: "🧪 Executar testes unitários"
        run: flutter test

      - name: "📊 Gerar informações da versão"
        id: version
        run: |
          VERSION="${{ github.event.inputs.version || '1.0.0' }}"
          BUILD_NUMBER=$((1000 + $GITHUB_RUN_NUMBER))
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "build-number=$BUILD_NUMBER" >> $GITHUB_OUTPUT
          echo "📱 Versão: $VERSION"
          echo "🔢 Build: $BUILD_NUMBER"

      - name: "🔄 Verificar mudanças"
        id: changes
        run: |
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            echo "should-build=true" >> $GITHUB_OUTPUT
          elif [[ "${{ github.event_name }}" == "schedule" ]]; then
            echo "should-build=true" >> $GITHUB_OUTPUT
          else
            # Verificar se houve mudanças relevantes
            if git diff --name-only HEAD~1 | grep -E "(lib/|pubspec\.yaml|android/|ios/)" > /dev/null; then
              echo "should-build=true" >> $GITHUB_OUTPUT
            else
              echo "should-build=false" >> $GITHUB_OUTPUT
            fi
          fi

  # ╭──────────────────────────────────────────────╮
  # │ 🧪 Android Test Build                       │
  # ╰──────────────────────────────────────────────╯
  android-test:
    name: "🧪 Android Test"
    needs: setup
    if: ${{ needs.setup.outputs.should-build == 'true' && (github.event.inputs.build_android_test != 'false') }}
    runs-on: ubuntu-latest
    
    steps:
      - name: "📥 Checkout código"
        uses: actions/checkout@v4

      - name: "☕ Configurar Java"
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: ${{ env.JAVA_VERSION }}

      - name: "🛠️ Instalar Flutter"
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          cache: true

      - name: "📦 Instalar dependências"
        run: flutter pub get

      - name: "🏗️ Build APK Test"
        run: |
          flutter build apk --debug \
            --dart-define=FLAVOR=test \
            --dart-define=APP_NAME="Observador Test" \
            --build-name="${{ needs.setup.outputs.version }}-test" \
            --build-number="${{ needs.setup.outputs.build-number }}"

      - name: "📁 Organizar APK Test"
        run: |
          cd build/app/outputs/flutter-apk/
          mv app-debug.apk "observador-test-v${{ needs.setup.outputs.version }}-${{ needs.setup.outputs.build-number }}.apk"

      - name: "📤 Upload APK Test"
        uses: actions/upload-artifact@v4
        with:
          name: "🧪-observador-test-apk"
          path: build/app/outputs/flutter-apk/observador-test-*.apk
          retention-days: 30

  # ╭──────────────────────────────────────────────╮
  # │ 📱 Android APK Release                       │
  # ╰──────────────────────────────────────────────╯
  android-apk:
    name: "📱 Android APK"
    needs: setup
    if: ${{ needs.setup.outputs.should-build == 'true' && (github.event.inputs.build_android_apk != 'false') }}
    runs-on: ubuntu-latest
    
    steps:
      - name: "📥 Checkout código"
        uses: actions/checkout@v4

      - name: "☕ Configurar Java"
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: ${{ env.JAVA_VERSION }}

      - name: "🛠️ Instalar Flutter"
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          cache: true

      - name: "📦 Instalar dependências"
        run: flutter pub get

      - name: "🏗️ Build APK Release"
        run: |
          flutter build apk --release \
            --dart-define=FLAVOR=production \
            --dart-define=APP_NAME="Observador" \
            --build-name="${{ needs.setup.outputs.version }}" \
            --build-number="${{ needs.setup.outputs.build-number }}" \
            --target-platform android-arm,android-arm64,android-x64

      - name: "📁 Organizar APK Release"
        run: |
          cd build/app/outputs/flutter-apk/
          mv app-release.apk "observador-v${{ needs.setup.outputs.version }}-${{ needs.setup.outputs.build-number }}.apk"
          
          # Criar informações do build
          cat > build-info.txt << EOF
          📱 Observador APK - v${{ needs.setup.outputs.version }}
          ═══════════════════════════════════════════════
          
          🔢 Versão: ${{ needs.setup.outputs.version }}
          🏗️ Build: ${{ needs.setup.outputs.build-number }}
          📅 Data: $(date '+%Y-%m-%d %H:%M:%S UTC')
          🌿 Branch: ${{ github.ref_name }}
          📝 Commit: ${{ github.sha }}
          💾 Tamanho: $(du -h observador-v${{ needs.setup.outputs.version }}-${{ needs.setup.outputs.build-number }}.apk | cut -f1)
          
          🚀 Instalação:
          1. Baixe o APK
          2. Ative "Fontes desconhecidas"
          3. Instale normalmente
          EOF

      - name: "📤 Upload APK Release"
        uses: actions/upload-artifact@v4
        with:
          name: "📱-observador-release-apk"
          path: |
            build/app/outputs/flutter-apk/observador-v*.apk
            build/app/outputs/flutter-apk/build-info.txt
          retention-days: 90

  # ╭──────────────────────────────────────────────╮
  # │ 📦 Android AAB Release                       │
  # ╰──────────────────────────────────────────────╯
  android-aab:
    name: "📦 Android AAB"
    needs: setup
    if: ${{ needs.setup.outputs.should-build == 'true' && (github.event.inputs.build_android_aab != 'false') }}
    runs-on: ubuntu-latest
    
    steps:
      - name: "📥 Checkout código"
        uses: actions/checkout@v4

      - name: "☕ Configurar Java"
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: ${{ env.JAVA_VERSION }}

      - name: "🛠️ Instalar Flutter"
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          cache: true

      - name: "📦 Instalar dependências"
        run: flutter pub get

      - name: "🏗️ Build AAB Release"
        run: |
          flutter build appbundle --release \
            --dart-define=FLAVOR=production \
            --dart-define=APP_NAME="Observador" \
            --build-name="${{ needs.setup.outputs.version }}" \
            --build-number="${{ needs.setup.outputs.build-number }}"

      - name: "📁 Organizar AAB Release"
        run: |
          cd build/app/outputs/bundle/release/
          mv app-release.aab "observador-v${{ needs.setup.outputs.version }}-${{ needs.setup.outputs.build-number }}.aab"

      - name: "📤 Upload AAB Release"
        uses: actions/upload-artifact@v4
        with:
          name: "📦-observador-release-aab"
          path: build/app/outputs/bundle/release/observador-v*.aab
          retention-days: 90

  # ╭──────────────────────────────────────────────╮
  # │ 🍎 iOS Build (opcional)                      │
  # ╰──────────────────────────────────────────────╯
  ios:
    name: "🍎 iOS Build"
    needs: setup
    if: ${{ needs.setup.outputs.should-build == 'true' && github.event.inputs.build_ios == 'true' }}
    runs-on: macos-latest
    
    steps:
      - name: "📥 Checkout código"
        uses: actions/checkout@v4

      - name: "🛠️ Instalar Flutter"
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          cache: true

      - name: "📦 Instalar dependências"
        run: flutter pub get

      - name: "🏗️ Build iOS"
        run: flutter build ios --release --no-codesign

      - name: "📤 Upload iOS Build"
        uses: actions/upload-artifact@v4
        with:
          name: "🍎-observador-ios"
          path: build/ios/iphoneos/Runner.app
          retention-days: 30

  # ╭──────────────────────────────────────────────╮
  # │ 📊 Resumo Final                              │
  # ╰──────────────────────────────────────────────╯
  summary:
    name: "📊 Resumo do Build"
    needs: [setup, android-test, android-apk, android-aab]
    if: always() && needs.setup.outputs.should-build == 'true'
    runs-on: ubuntu-latest
    
    steps:
      - name: "📊 Resumo Final"
        run: |
          echo "🎉 Build do Observador concluído!"
          echo ""
          echo "📱 Versão: ${{ needs.setup.outputs.version }}"
          echo "🔢 Build: ${{ needs.setup.outputs.build-number }}"
          echo "📅 Data: $(date '+%Y-%m-%d %H:%M:%S UTC')"
          echo ""
          echo "✅ Builds realizados:"
          echo "   🧪 Test APK: ${{ needs.android-test.result == 'success' && '✅' || '❌' }}"
          echo "   📱 Release APK: ${{ needs.android-apk.result == 'success' && '✅' || '❌' }}"
          echo "   📦 Release AAB: ${{ needs.android-aab.result == 'success' && '✅' || '❌' }}"
          echo "   🍎 iOS: ${{ needs.ios.result == 'success' && '✅' || (github.event.inputs.build_ios == 'true' && '❌' || '⏭️') }}"
          echo ""
          echo "🔗 Para baixar os arquivos:"
          echo "   1. Vá para Actions > Esta execução"
          echo "   2. Baixe os artifacts desejados"
          echo "   3. Extraia e instale"