# ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
# ┃ 🖥️ Workflow - Desktop Builds                │
# ┃ 💻 Linux, Windows, macOS (skip por enquanto) │
# ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛

name: "🖥️ Desktop Builds"

on:
  workflow_call:
  workflow_dispatch:
    inputs:
      skip_builds:
        description: 'Pular builds desktop?'
        required: false
        default: true
        type: boolean
      platforms:
        description: 'Plataformas (linux,windows,macos)'
        required: false
        default: 'linux,windows,macos'
        type: string

jobs:
  # ╭──────────────────────────────────────────────╮
  # │ 🐧 Linux Build                               │
  # ╰──────────────────────────────────────────────╯
  linux-build:
    name: "🐧 Linux Build"
    runs-on: ubuntu-latest
    if: ${{ github.event.inputs.skip_builds != 'true' && contains(github.event.inputs.platforms, 'linux') }}
    
    steps:
      - name: "📥 Checkout código"
        uses: actions/checkout@v4

      - name: "🛠️ Instalar Flutter"
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.24.5'
          cache: true

      - name: "📦 Instalar dependências Linux"
        run: |
          sudo apt-get update -y
          sudo apt-get install -y ninja-build libgtk-3-dev

      - name: "📦 Flutter dependencies"
        run: flutter pub get

      - name: "🏗️ Build Linux"
        run: flutter build linux --release

      - name: "📤 Upload Linux Build"
        uses: actions/upload-artifact@v4
        with:
          name: "observador-linux"
          path: build/linux/x64/release/bundle/
          retention-days: 30

  # ╭──────────────────────────────────────────────╮
  # │ 🪟 Windows Build                             │
  # ╰──────────────────────────────────────────────╯
  windows-build:
    name: "🪟 Windows Build"
    runs-on: windows-latest
    if: ${{ github.event.inputs.skip_builds != 'true' && contains(github.event.inputs.platforms, 'windows') }}
    
    steps:
      - name: "📥 Checkout código"
        uses: actions/checkout@v4

      - name: "🛠️ Instalar Flutter"
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.24.5'
          cache: true

      - name: "📦 Flutter dependencies"
        run: flutter pub get

      - name: "🏗️ Build Windows"
        run: flutter build windows --release

      - name: "📤 Upload Windows Build"
        uses: actions/upload-artifact@v4
        with:
          name: "observador-windows"
          path: build/windows/x64/runner/Release/
          retention-days: 30

  # ╭──────────────────────────────────────────────╮
  # │ 🍎 macOS Build                               │
  # ╰──────────────────────────────────────────────╯
  macos-build:
    name: "🍎 macOS Build"
    runs-on: macos-latest
    if: ${{ github.event.inputs.skip_builds != 'true' && contains(github.event.inputs.platforms, 'macos') }}
    
    steps:
      - name: "📥 Checkout código"
        uses: actions/checkout@v4

      - name: "🛠️ Instalar Flutter"
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.24.5'
          cache: true

      - name: "📦 Flutter dependencies"
        run: flutter pub get

      - name: "🏗️ Build macOS"
        run: flutter build macos --release

      - name: "📤 Upload macOS Build"
        uses: actions/upload-artifact@v4
        with:
          name: "observador-macos"
          path: build/macos/Build/Products/Release/
          retention-days: 30

  # ╭──────────────────────────────────────────────╮
  # │ ⏭️ Desktop Builds Skipped                   │
  # ╰──────────────────────────────────────────────╯
  desktop-skip:
    name: "🖥️ Desktop Builds (Skipped)"
    runs-on: ubuntu-latest
    if: ${{ github.event.inputs.skip_builds == 'true' || github.event.inputs.skip_builds == null }}
    
    steps:
      - name: "⏭️ Skip Desktop Builds"
        run: |
          echo "🖥️ Builds desktop foram pulados"
          echo ""
          echo "💡 Para habilitar builds desktop:"
          echo "   🐧 Linux: Instalar dependências GTK"
          echo "   🪟 Windows: Configurar Visual Studio"
          echo "   🍎 macOS: Configurar Xcode"
          echo ""
          echo "✅ Configure e mude 'skip_builds' para false"
          echo "🎯 Especifique plataformas em 'platforms'"
          echo ""
          echo "📝 Exemplo de uso:"
          echo "   platforms: 'linux,windows'"
          echo "   skip_builds: false"
